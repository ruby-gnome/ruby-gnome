# -*- coding: utf-8 -*-
require 'test/unit'
require 'glib2'

class TestFlags < Test::Unit::TestCase
  def test_flags_compare
    {
      '<=>' => [
        [0b0000, 0.0, nil],
        [0b0000, 0b0000, 0],
        [0b0000, 0b0110, -1],
        [0b0000, 0b1111, -1],
        [0b0110, 0b0000, 1],
        [0b0110, 0b0011, nil],
        [0b0110, 0b0110, 0],
        [0b0110, 0b0111, -1],
        [0b0110, 0b1001, nil],
        [0b0110, 0b1100, nil],
        [0b0110, 0b1110, -1],
        [0b0110, 0b1111, -1],
        [0b1111, 0b0000, 1],
        [0b1111, 0b0110, 1],
        [0b1111, 0b1111, 0],
      ],
      '==' => [
        [0b0000, 0.0, nil],
        [0b0000, 0b0000, true],
        [0b0000, 0b0110, false],
        [0b0000, 0b1111, false],
        [0b0110, 0b0000, false],
        [0b0110, 0b0011, false],
        [0b0110, 0b0110, true],
        [0b0110, 0b0111, false],
        [0b0110, 0b1001, false],
        [0b0110, 0b1100, false],
        [0b0110, 0b1110, false],
        [0b0110, 0b1111, false],
        [0b1111, 0b0000, false],
        [0b1111, 0b0110, false],
        [0b1111, 0b1111, true],
      ],
      '>=' => [
        [0b0000, 0.0, nil],
        [0b0000, 0b0000, true],
        [0b0000, 0b0110, false],
        [0b0000, 0b1111, false],
        [0b0110, 0b0000, true],
        [0b0110, 0b0011, false],
        [0b0110, 0b0110, true],
        [0b0110, 0b0111, false],
        [0b0110, 0b1001, false],
        [0b0110, 0b1100, false],
        [0b0110, 0b1110, false],
        [0b0110, 0b1111, false],
        [0b1111, 0b0000, true],
        [0b1111, 0b0110, true],
        [0b1111, 0b1111, true],
      ],
      '<=' => [
        [0b0000, 0.0, nil],
        [0b0000, 0b0000, true],
        [0b0000, 0b0110, true],
        [0b0000, 0b1111, true],
        [0b0110, 0b0000, false],
        [0b0110, 0b0011, false],
        [0b0110, 0b0110, true],
        [0b0110, 0b0111, true],
        [0b0110, 0b1001, false],
        [0b0110, 0b1100, false],
        [0b0110, 0b1110, true],
        [0b0110, 0b1111, true],
        [0b1111, 0b0000, false],
        [0b1111, 0b0110, false],
        [0b1111, 0b1111, true],
      ],
      '>' => [
        [0b0000, 0.0, nil],
        [0b0000, 0b0000, false],
        [0b0000, 0b0110, false],
        [0b0000, 0b1111, false],
        [0b0110, 0b0000, true],
        [0b0110, 0b0011, false],
        [0b0110, 0b0110, false],
        [0b0110, 0b0111, false],
        [0b0110, 0b1001, false],
        [0b0110, 0b1100, false],
        [0b0110, 0b1110, false],
        [0b0110, 0b1111, false],
        [0b1111, 0b0000, true],
        [0b1111, 0b0110, true],
        [0b1111, 0b1111, false],
      ],
      '<' => [
        [0b0000, 0.0, nil],
        [0b0000, 0b0000, false],
        [0b0000, 0b0110, true],
        [0b0000, 0b1111, true],
        [0b0110, 0b0000, false],
        [0b0110, 0b0011, false],
        [0b0110, 0b0110, false],
        [0b0110, 0b0111, true],
        [0b0110, 0b1001, false],
        [0b0110, 0b1100, false],
        [0b0110, 0b1110, true],
        [0b0110, 0b1111, true],
        [0b1111, 0b0000, false],
        [0b1111, 0b0110, false],
        [0b1111, 0b1111, false],
      ],
    }.each do |ope, tests|
      tests.each do |a, b, ret|
        assert_equal(ret, GLib::KeyFile::Flags.new(a).send(ope, b))
      end
    end
  end
end
